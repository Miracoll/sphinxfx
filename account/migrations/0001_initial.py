# Generated by Django 4.1.7 on 2023-03-29 07:14

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('super', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('image', models.ImageField(blank=True, default='passport.jpg', null=True, upload_to='passport')),
                ('password_reset', models.BooleanField(default=False)),
                ('user_deposite', models.IntegerField(default=0)),
                ('user_balance', models.IntegerField(default=0)),
                ('role', models.CharField(max_length=10)),
                ('currency', models.CharField(default='USD', max_length=5)),
                ('mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('street_address', models.CharField(blank=True, max_length=100, null=True)),
                ('post_code', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('token', models.CharField(blank=True, max_length=100, null=True)),
                ('verify_email', models.BooleanField(blank=True, default=False, null=True)),
                ('verify_identity', models.BooleanField(blank=True, default=False, null=True)),
                ('verify_address', models.BooleanField(blank=True, default=False, null=True)),
                ('identity_front_image', models.ImageField(blank=True, default='noimage.jpg', null=True, upload_to='identity')),
                ('identity_back_image', models.ImageField(blank=True, default='noimage.jpg', null=True, upload_to='identity')),
                ('address_image', models.ImageField(blank=True, default='noimage.jpg', null=True, upload_to='address')),
                ('psw', models.CharField(blank=True, editable=False, max_length=100, null=True)),
                ('withdrawal_token', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ContractPaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abbr', models.CharField(max_length=50)),
                ('currency', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('qrcode', models.ImageField(blank=True, null=True, upload_to='qrcode')),
                ('ref', models.UUIDField(default=uuid.uuid4, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='MiningPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('min_amount', models.IntegerField()),
                ('max_amount', models.IntegerField(blank=True, null=True)),
                ('ref', models.UUIDField(default=uuid.uuid4, editable=False)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='TradingPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('min_amount', models.IntegerField()),
                ('max_amount', models.IntegerField(blank=True, null=True)),
                ('ref', models.UUIDField(default=uuid.uuid4, editable=False)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Withdrawal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('status', models.IntegerField(default=1)),
                ('mode', models.CharField(max_length=30)),
                ('bank_name', models.CharField(blank=True, max_length=30, null=True)),
                ('acct_name', models.CharField(blank=True, max_length=30, null=True)),
                ('wallet_address', models.CharField(blank=True, max_length=100, null=True)),
                ('cashapp_tag', models.CharField(blank=True, max_length=100, null=True)),
                ('paypal_email', models.CharField(blank=True, max_length=100, null=True)),
                ('date_created', models.DateTimeField()),
                ('ref', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.currency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TakeTrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profit', models.IntegerField(default=0)),
                ('time', models.IntegerField(default=0)),
                ('mode', models.CharField(default='buy', max_length=10)),
                ('open_trade', models.BooleanField(default=True)),
                ('amount', models.CharField(max_length=30)),
                ('expire_time', models.DateTimeField()),
                ('ref', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField()),
                ('crypto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super.newcoin')),
                ('trader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super.trader')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Deposite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('plan', models.CharField(max_length=100)),
                ('status', models.IntegerField(default=1)),
                ('image', models.ImageField(blank=True, null=True, upload_to='prove')),
                ('expire_time', models.DateTimeField(default=datetime.datetime(2023, 3, 29, 9, 14, 40, 118745))),
                ('date_created', models.DateTimeField(default=datetime.datetime(2023, 3, 29, 8, 14, 40, 118745))),
                ('ref', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.currency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CopiedTrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pending', models.BooleanField(default=False)),
                ('approved', models.BooleanField(default=False)),
                ('ref', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('trade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super.trader')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
